This is set of scripts and rules for Make to build VHDL files into Xilinx Bitstream using Xilinx ISE WebPack

See more at http://pigster.afraid.org/hw/ise-build-system

====== Usage ======
===== Basic Tutorial =====

For each project, you will need ''Makefile''. You will find some examples in ''examples'' directory. Lets look on some basic one:
<code>
SRCS_SYNTH=reconf_demo_mult_components.vhd datapath.vhd test_ctl.vhd top.vhd uart.vhd
PART=xc3s1000-FT256-4
TOP_NAME=top

#============= END OF CONFIG ======================
include ~/ise-make-system/xilinx_rules.mk
</code>

  * ''SRCS_SYNTH'' contains list of files to be built into bitstream
  * ''PART'' is target platform descriptor including family name, package and stepping
  * ''TOP_NAME'' is name of top entity
  * the path after ''include'' keyword must reflect where did you installed ''xilinx_rules.mk''

That's all. Now just run ''make'' and you should get ''.bit'' file. This will also create empty ''.ucf''. You can either edit it by hand and than just rebuild running ''make'' or you can use Xilinx PlanAhead. For this you will need to create PlanAhead project, do all changes and than export to .ucf (''File->Export Constraints'').

===== Make Targets =====
Here are some useful make targets contained in ''xilinx_rules.mk''
  * ''all'' - default target, prepares everything and builds .bit
  * ''impact'' - uploads .bit using ''impact'' - works correctly only if FPGA is first on JTAG chain as it is on most development boards
  * ''clean'' - removes all files, created during build except configuration
  * ''distclean'' - removes also some rarely edited configuration files
  * ''vsim'' - builds simulation testbenches and launches ModelSim in interactive mode
  * ''vsim-run'' - builds simulation testbenches and launches ModelSim in console mode

===== Complex Example and Simulations =====

Lets take a look on some complex ''Makefile''. The following one utilizes all features:
<code>
SRCS_SYNTH=alu_op_package.vhd jump_type_package.vhd  dcache.vhd     ext_type_package.vhd  id_comb_logic_tbl.vhd  next_addr_logic_tbl.vhd  Pipeline_reg_extype.vhd   statistics.vhd
SRCS_SIM=txt_util.vhd    Clk_Reset_Gen_behav.vhd  dlx_pkg.vhd              MemSub.vhd                tb_dcache.vhd
SYNTH_DIR=../synth
SIM_DIR=../sim
PART=xc3s1000-FT256-4
TOP_NAME=intdlx_core
TESTBENCH_NAME=IntDLX
DESIGN_NAME=intdlx

#============= END OF CONFIG ======================
include ~/ise-make-system/xilinx_rules.mk
</code>

  * All files listed in ''SRCS_SYNTH'' is take relative to ''SYNTH_DIR'' and all files listed in ''SRCS_SIM'' relative to ''SIM_DIR''. This enables easily partition synthesizable code and simulation
  * ''SRCS_SIM'' contains all simulation files. These files are built only for by Modelsim for simulation purposes
  * ''TESTBENCH_NAME'' is name of entity, which is used as top for simulation (testbench)
  * ''DESIGN_NAME'' contains name of design, which is used to construct various filenames (like .bit), without this variable, name of directory, which contains Makefile is used